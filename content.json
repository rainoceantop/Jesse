{"meta":{"title":"Jesse","subtitle":"个人博客","description":"通过这个博客来记录学习笔记以及一些学习上遇到的问题","author":"Jesse","url":"https://rainoceantop.github.io/Jesse"},"pages":[{"title":"categories","date":"2018-06-04T17:48:09.000Z","updated":"2018-06-04T17:48:34.545Z","comments":false,"path":"categories/index.html","permalink":"https://rainoceantop.github.io/Jesse/categories/index.html","excerpt":"","text":""},{"title":"tags","date":"2018-06-04T17:47:00.000Z","updated":"2018-06-04T17:47:46.438Z","comments":false,"path":"tags/index.html","permalink":"https://rainoceantop.github.io/Jesse/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"mysql优化","slug":"mysql优化","date":"2018-07-09T17:55:39.000Z","updated":"2018-07-09T18:15:55.445Z","comments":true,"path":"2018/07/10/mysql优化/","link":"","permalink":"https://rainoceantop.github.io/Jesse/2018/07/10/mysql优化/","excerpt":"mysql优化主要分为三个方面1.内核优化（主要由服务器运维人员完成）2.配置参数优化（my.cnf），通过进行压力测试来适当调整配置参数3.SQL语句优化","text":"mysql优化主要分为三个方面1.内核优化（主要由服务器运维人员完成）2.配置参数优化（my.cnf），通过进行压力测试来适当调整配置参数3.SQL语句优化 一.查看运行时间1.select version()：查看数据库版本，只有5.0.37以上版本才支持show profiles（查看语句具体运行时间）2.show variables like “%pro%”：查看profiling是否开启（默认不开启）3.set profiling = 1：开启profiling4.show profiles：查看所有运行过的sql语句的执行时间5.show profile for query 1：查看第一个sql语句执行过程的各个操作的耗时情况6.show profile cpu,block io,memory,swaps,context switches,source for query 1：查看第一个sql语句执行的各种资源消耗情况7.set profiling = 0：关闭profiling 二.修改变量1.set (sort|join|read|read_rnd)_buffer_size = 6410241024：在需要查询大量数据时，适当修改缓冲区大小可以在不修改全局变量(my.cnf)的情况下应用于当前的会话 三.查询变量1.GLOBAL：全局变量，修改这个变量影响所有会话2.SESSION：当前会话变量，修改这个变量影响当前会话3.SHOW [GLOBAL | SESSION] VARIABLES [LIKE ‘pattern’ | WHERE expr]：查看变量（全局会话，当前会话）的通用表达式4.select @@global.var_name/@@session.var_name：查看单个变量（完全显示变量名和值）5.自定义变量：set @name=’hello world’;6.变量赋值：set @name:=author from posts limit 0,1;（将查询到的author栏的第一个值赋值）7.查看变量：select @name; 四.添加索引1.alter table table_name add index index_name(column_name); 五.查询缓存1.show variables like ‘%query_cache%’：如果query_cache_type值是ON的话说明已经开启缓存have_query_cache：表示是否支持query cache；query_cache_limit：指定单个查询能够使用的缓冲区大小，缺省为1M。query_cache_min_res_unit：表示query cache每个结果集存放的最小内存大小，默认4k；query_cache_size 表示系统中用于query cache的内存大小；query_cache_type 系统是否打开了query cache功能；query_cache_type=0（OFF）关闭query_cache_type=1（ON）缓存所有结果，除非select语句使用SQL_NO_CACHE禁用查询缓存query_cache_type=2(demand)，只缓存select语句中通过SQL_CACHE指定需要缓存的查询，for e.g. “select SQL_CACHE count(*) from table”query_cache_wlock_invalidate 针对myisam存储引擎，设置当有write lock在某个table上面的时候，读请求是要等待write lock释放资源之后再查询还是允许直接从query cache中读取结果，默认是OFF，可以直接从query cache中取得结果。 2.set global query_cache_type=1：如果设置完不修改配置文件的话，数据库重启就失效[mysqld]中添加：query_cache_size = 20Mquery_cache_type = ON3.show status like ‘qcache%’：查看缓存状态其中各个参数的意义如下： Qcache_free_blocks：缓存中相邻内存块的个数。数目大说明可能有碎片。FLUSH QUERY CACHE会对缓存中的碎片进行整理，从而得到一个空闲块。Qcache_free_memory：缓存中的空闲内存。Qcache_hits：每次查询在缓存中命中时就增大Qcache_inserts：表示未命中cache后将结果集再写入到cache中的次数；Qcache_lowmem_prunes：缓存出现内存不足并且必须要进行清理以便为更多查询提供空间的次数。这个数字最好长时间来看;如果这个 数字在不断增长，就表示可能碎片非常严重，或者内存很少。(上面的 free_blocks和free_memory可以告诉您属于哪种情况)Qcache_not_cached：不适合进行缓存的查询的数量，通常是由于这些查询不是 SELECT 语句或者用了now()之类的函数。Qcache_queries_in_cache：当前缓存的查询(和响应)的数量。Qcache_total_blocks：缓存中块的数量。 评估select缓存命中率公式如下：Qcache_hits/Com_select当读写操作差不多的时候，建议关闭该功能，但是如果是大量查询,即读多写少的环境中，建议启用缓存注意，第一次查询时生成缓存，接下去的查询才会命中缓存查看Com_select的总数MariaDB [sunny]&gt; show global status like ‘Com%select%’; ！其他mysql配置文件：linux一般放在/etc/my.cnf（集成环境在lampp下的etc中） 缓存数据失效时机在表的结构或数据发生改变时，查询缓存中的数据不再有效。有这些INSERT、UPDATE、 DELETE、TRUNCATE、ALTER TABLE、DROP TABLE或DROP DATABASE会导致缓存数据失效。所以查询缓存适合有大量相同查询的应用，不适合有大量数据更新的应用。 可以使用下面三个SQL来清理查询缓存：1、FLUSH QUERY CACHE; // 清理查询缓存内存碎片。2、RESET QUERY CACHE; // 从查询缓存中移出所有查询。3、FLUSH TABLES; //关闭所有打开的表，同时该操作将会清空查询缓存中的内容。","categories":[{"name":"mysql","slug":"mysql","permalink":"https://rainoceantop.github.io/Jesse/categories/mysql/"},{"name":"优化配置","slug":"mysql/优化配置","permalink":"https://rainoceantop.github.io/Jesse/categories/mysql/优化配置/"}],"tags":[{"name":"mysql","slug":"mysql","permalink":"https://rainoceantop.github.io/Jesse/tags/mysql/"},{"name":"mysql优化","slug":"mysql优化","permalink":"https://rainoceantop.github.io/Jesse/tags/mysql优化/"},{"name":"mysql优化配置","slug":"mysql优化配置","permalink":"https://rainoceantop.github.io/Jesse/tags/mysql优化配置/"}]},{"title":"linux下php集成环境配置","slug":"linux下php集成环境配置","date":"2018-06-17T23:02:54.000Z","updated":"2018-06-18T15:38:49.065Z","comments":true,"path":"2018/06/18/linux下php集成环境配置/","link":"","permalink":"https://rainoceantop.github.io/Jesse/2018/06/18/linux下php集成环境配置/","excerpt":"本文主要讲解linux下配置php集成环境。主要有以下内容： xampp的下载以及安装 apache以及mysql的启动与停止 修改配置文件","text":"本文主要讲解linux下配置php集成环境。主要有以下内容： xampp的下载以及安装 apache以及mysql的启动与停止 修改配置文件 xampp的下载与安装xampp可在官方网站的下载页下载，下载完打开下载目录，可以看到有一个名类似为xampp-linux-x64-xxxxx-x-installer.run的安装文件。打开终端命令行，键入以下代码进行安装1234//首先进入到xampp安装文件的目录，我的是下载目录cd 下载//然后运行安装文件启动安装程序，一般情况下一直点击next即可，xampp一般情况下会被安装在/opt目录下的lamppsudo ./xampp-linux-x64-xxxxx-x-installer.run apache以及mysql命令行启动停止操作（推荐）123sudo /opt/lampp/lampp start //启动服务sudo /opt/lampp/lampp restart //重启服务sudo /opt/lampp/lampp stop //停止服务 图形管理界面操作1sudo /opt/lampp/manager-linux-x64.run //打开图形管理界面 图形管理界面 启动服务后建议打开浏览器输入localhost网址看下有没有运行成功 修改apache默认执行路径apache的默认执行路径是项目文件夹的htdocs目录，因为xampp是安装在linux根目录的opt文件夹下面，由于权限问题是不能创建文件以及文件夹的。为了方便操作，我们可以把他的执行路径更改到可方便操作的地方，比如用户下面(/home/user/)。xampp的配置文件放在该目录的etc文件夹中，由于权限问题，如果要更改执行路径可以用命令行通过nano操作123456789//通过nano打开apache配置文件，注意要用sudo管理员身份打开sudo nano /opt/lampp/etc/httpd.conf//找到下面两行，将路径改为你的项目路径DocumentRoot \"/home/user/yourapp\"&lt;Directory \"/home/user/yourapp\"&gt;//打开apache下的config文件sudo nano /opt/lampp/apache2/conf/httpd.conf//继续修改路径&lt;Directory \"/home/user/yourapp\"&gt; 修改完后按ctrl o保存，ctrl x退出编辑，然后输入sudo /opt/lampp/lampp restart重启apache服务器 其他mysql操作因为xampp自带phpmyadmin，我们可以很方便的查看以及操作数据库。在打开了apache以及mysql服务后，在浏览器输入localhost/phpmyadmin即可进入数据库图形操作界面（自动登录）。值得注意的是，phpmyadmin默认的帐号是root，密码为空，也就是””，与mysql相同（可以打开/opt/lampp/phpmyadmin/config.inc.php查看）。如果要连接mysql数据库，使用帐号root密码&quot;&quot;连接即可。 php解释器路径xampp的php解释器默认情况下放在/opt/lampp/bin/php，可以在命令行键入whereis php查看","categories":[{"name":"linux","slug":"linux","permalink":"https://rainoceantop.github.io/Jesse/categories/linux/"},{"name":"php","slug":"linux/php","permalink":"https://rainoceantop.github.io/Jesse/categories/linux/php/"},{"name":"环境配置","slug":"linux/php/环境配置","permalink":"https://rainoceantop.github.io/Jesse/categories/linux/php/环境配置/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://rainoceantop.github.io/Jesse/tags/linux/"},{"name":"php","slug":"php","permalink":"https://rainoceantop.github.io/Jesse/tags/php/"},{"name":"php集成环境配置","slug":"php集成环境配置","permalink":"https://rainoceantop.github.io/Jesse/tags/php集成环境配置/"}]},{"title":"manjaro基本设置","slug":"manjaro基本设置","date":"2018-06-04T23:11:33.000Z","updated":"2018-06-05T00:38:23.738Z","comments":true,"path":"2018/06/05/manjaro基本设置/","link":"","permalink":"https://rainoceantop.github.io/Jesse/2018/06/05/manjaro基本设置/","excerpt":"Manjaro是一款基于Arch Linux、对用户友好、全球排名第1的Linux发行版。详情参见distrowatch这篇文章主要是将manjaro刚安装完需要设置的东西罗列出来，一切都是为了在使用中尽量减少碰见的问题附上manjaro的相关链接：manjaro中文网manjaro官方网站manjaro安装参考","text":"Manjaro是一款基于Arch Linux、对用户友好、全球排名第1的Linux发行版。详情参见distrowatch这篇文章主要是将manjaro刚安装完需要设置的东西罗列出来，一切都是为了在使用中尽量减少碰见的问题附上manjaro的相关链接：manjaro中文网manjaro官方网站manjaro安装参考 配置国内源打开manjaro命令行（菜单里的终端模拟器），键入如下两行代码12345//由于各方面原因，有些命令可能不起作用，前三行代码逐个测试，可以之后跳到更新系统sudo pacman-mirrors -gb testing -c China //选择中国源，可选一个或多个或全选sudo pacman-mirrors -b testing -c Chinasudo pacman-mirrors -i -c China -m ranksudo pacman -Syyu //更新系统 升级软件由于配置了中国源，现在就不受网速限制了。看到右下角的软件包管理器提醒你更新软件了吗？打开它并更新软件至最新版本 配置输入法在软件管理包搜索并下载谷歌拼音，通过软件包管理器下载输入法会同时下载相关依赖，如fcitx。下载完重启才能开启输入法（至少目前我不知道还有其他方法）如果发现不能配置输入法，打开命令行键入以下命令后再重试12sudo pacman -S fcitx-imsudo pacman -S fcitx-configtool 在配置界面里可以配置输入法的切换激活快捷键，但还差最后一步配置才能正常使用输入法打开命令行，键入以下代码123456sudo nano ~/.xprofile //进入编辑页面后，复制以下代码粘贴上去，然后根据提示保存后离开重试#fcitxexport GTK_IM_MODULE=fcitx export QT_IM_MODULE=fcitx export XMODIFIERS=\"@im=fcitx\" 时间调整如果你使用的是双系统（manjaro和windows并存），那么你可能会遇到时间比你所在时区的正常时间快了8个小时。这是因为linux和windows看待系统硬件的方式是不一样的Windows把系统硬件时间当作本地时间(local time),即操作系统中显示的时间跟BIOS中显示的时间是一样的。 Linux/Unix/Mac把硬件时间当作UTC，操作系统中显示的时间是硬件时间经过换算得来的，比如说北京时间是GMT+8，则系统中显示时间是硬件时间+8。解决方法其实也很简单，只要进入windows系统。通过右击时间显示区，打开日期和时间，修改时区为(UTC)协调世界时即可 win10系统下关机后自动重启进入电源选项（控制面板或左下角搜索栏搜索电源）→选择电源按钮的功能→更改当前不可用的设置→取消勾选“启用快速启动”功能 即可 添加archlinuxCN源打开命令行，键入以下代码12345678910sudo nano /etc/pacman.conf//进入编辑页面后，在文件底部加入如下几行，保存离开[archlinuxcn]SigLevel = Optional TrustedOnlyServer = https://mirrors.ustc.edu.cn/archlinuxcn/$arch//配置完后键入以下命令sudo pacman-mirrors -g //更新并选择最快的源列表pacman -S archlinux-keying //更新archlinux签名sudo pacman -S yaourt //用于软件安装arch源的软件sudo pacman -Syyu //同步并更新系统 安装常用软件如果已经安装了archlinuxcn源，可以打开软件包管理器-&gt;首选项-&gt;AUR-&gt;启用AUR支持，然后就可以直接在管理器里下载需要的软件了或者也可以使用命令行安装，以下列出两个例子 网易云音乐1sudo yaourt -S netease-cloud-music 微信1sudo yaourt -S electronic-wechat","categories":[{"name":"linux","slug":"linux","permalink":"https://rainoceantop.github.io/Jesse/categories/linux/"},{"name":"manjaro","slug":"linux/manjaro","permalink":"https://rainoceantop.github.io/Jesse/categories/linux/manjaro/"},{"name":"基本设置","slug":"linux/manjaro/基本设置","permalink":"https://rainoceantop.github.io/Jesse/categories/linux/manjaro/基本设置/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://rainoceantop.github.io/Jesse/tags/linux/"},{"name":"archlinux","slug":"archlinux","permalink":"https://rainoceantop.github.io/Jesse/tags/archlinux/"},{"name":"manjaro","slug":"manjaro","permalink":"https://rainoceantop.github.io/Jesse/tags/manjaro/"},{"name":"manjaro基本设置","slug":"manjaro基本设置","permalink":"https://rainoceantop.github.io/Jesse/tags/manjaro基本设置/"}]},{"title":"linux基础","slug":"linux基础","date":"2018-06-04T21:59:02.000Z","updated":"2018-06-17T22:04:27.752Z","comments":true,"path":"2018/06/05/linux基础/","link":"","permalink":"https://rainoceantop.github.io/Jesse/2018/06/05/linux基础/","excerpt":"Linux是一套免费使用和自由传播的类Unix操作系统，是一个基于POSIX和UNIX的多用户、多任务、支持多线程和多CPU的操作系统。它能运行主要的UNIX工具软件、应用程序和网络协议。它支持32位和64位硬件。Linux继承了Unix以网络为核心的设计思想，是一个性能稳定的多用户网络操作系统。严格来讲，Linux这个词本身只表示Linux内核，但实际上人们已经习惯了用Linux来形容整个基于Linux内核，并且使用GNU 工程各种工具和数据库的操作系统。开发者：Linus Torvalds（同时也是git的开发者） Linux吉祥物 Tux","text":"Linux是一套免费使用和自由传播的类Unix操作系统，是一个基于POSIX和UNIX的多用户、多任务、支持多线程和多CPU的操作系统。它能运行主要的UNIX工具软件、应用程序和网络协议。它支持32位和64位硬件。Linux继承了Unix以网络为核心的设计思想，是一个性能稳定的多用户网络操作系统。严格来讲，Linux这个词本身只表示Linux内核，但实际上人们已经习惯了用Linux来形容整个基于Linux内核，并且使用GNU 工程各种工具和数据库的操作系统。开发者：Linus Torvalds（同时也是git的开发者） Linux吉祥物 Tux 目录操作进入目录：cd mulu/mulu2 返回目录：cd ../.. 返回最上层目录：cd - 返回home : cd ~ 绝对路径进入目录：cd /home/jesse/Documents/folder 文件操作创建创建文件：touch file1.txt file2 file3 创建文件夹：mkdir folder3 删除删除文件夹：rmdir folder3(删除空文件夹) 删除文件/文件夹： rm file1 rm -r folder1/(递归逐个删除) rm -i file1 file2 file3 file4(逐个提示是否删除) rm -I file1 file2 file3 file4(大于三个文件时提示是否删除) rm *(清空该目录下所有文件) rm /(清空系统所有文件) 复制&amp;剪切复制文件： cp file1 filecopy(如果存在会覆盖) cp -i file1 filecopy(如果存在会提示) cp file1 folder/(复制到文件夹folder中，/识别文件夹) cp -R folder/ folder2/(-R代表递归，逐个将folder的文件复制到folder2中) cp file* folder2/(将所有file开头的文件复制到folder2目录下) cp *file folder2/(将所有file结尾的文件复制到folder2目录下) cp file1 file2 file3 folder2/(将前面所有的东西复制到最后所指的目录) 剪切： mv file1 folder/ (移动到当前文件夹的folader文件夹下) mv file1 ./folder (同上，移动到当前文件夹的folader文件夹下) mv file1 ./folder file2 (移动到当前文件夹的folader文件夹下并重命名为file2) mv file1 /folder (!此操作会将文件移动到根目录) 查看查看当前目录下的文件列表：ls 查看当前目录下的文件列表的详细信息：ls -l 或者 ls -lh(适合人类看的) 查看当前目录下的所有文件列表：ls -a 查看ls的所有功能：ls --help nano编辑文件(功能命令^代表ctrl键)：nano t.py(不存在文件的话会自动创建文件) cat编辑文件： cat t.py(显示文件内容) cat t.py &gt; t1.py(将t.py的内容复制到t1.py中) cat t.py t1.py &gt; t2.py(将t.py t1.py的内容复制到t2.py中) cat t3.py &gt;&gt; t2.py(将t3.py的内容加到t2.ty的后面) 执行运行python3文件：python3 t.py（被执行文件头部需要有解释器声明 #!/usr/bin/python3） 权限操作权限解读第1代表类型，第2-4代表user，第5-7代表group，第8-10代表其他的权限，例如： drwxr-xr-x：d代表文件夹类型，r代表可读，w代表可写，x代表可执行(执行命令：./t1.py) -rw-r--r--：第一个-代表文件类型 修改权限chmod u+r t1.py(为user用户t1.py增加可读权限) chmod u+rwx t1.py(为user用户t1.py增加可读可写可执行权限) chmod u-r t1.py(为user用户t1.py减去可读权限) chmod g+r t1.py(为group用户t1.py增加可读权限) chmod o+r t1.py(为others用户t1.py增加可读权限) chmod a+r t1.py(为全部用户t1.py增加可读权限) chmod ug+r t1.py(为user,group用户t1.py增加可读权限) SSH连接下载linux SSH终端：sudo apt-get install openssh-server 获取ip地址：ifconfig(如果提示没安装一些东西：sudo apt install net-tools) 用mac控制linux：ssh jesse@192.168.0.108 用windows控制：下载PuTTY 手机控制：下载ssh应用 控制后图形界面显示： 使用外网 Teamviewer 使用局域网 VNC(sudo apt-get install x11vnc) mac将文件推送到linux运行：ssh jesse@192.168.0.108 python3 &lt; t1.py(将t1.py推送到linux上运行) 将文件复制到linux上：scp {a,b}.py jesse@192.168.0.108:~/Desktop/ 从linux云端保存到本地：scp jesse@192.168.0.108:~/Desktop/b.py c.py 控制云端弹出窗口：ssh jesse@192.168.0.108 &quot;export DISPLAY:0; firefox&quot; 其他清空命令行：clear 下载软件：sudo apt-get install xxxxx （arch系列的linux不适用）","categories":[{"name":"linux","slug":"linux","permalink":"https://rainoceantop.github.io/Jesse/categories/linux/"},{"name":"基础","slug":"linux/基础","permalink":"https://rainoceantop.github.io/Jesse/categories/linux/基础/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://rainoceantop.github.io/Jesse/tags/linux/"},{"name":"linux基础","slug":"linux基础","permalink":"https://rainoceantop.github.io/Jesse/tags/linux基础/"},{"name":"linux基本指令","slug":"linux基本指令","permalink":"https://rainoceantop.github.io/Jesse/tags/linux基本指令/"}]},{"title":"git的基本命令","slug":"git的基本命令","date":"2018-06-04T21:02:42.000Z","updated":"2018-06-04T22:42:42.448Z","comments":true,"path":"2018/06/05/git的基本命令/","link":"","permalink":"https://rainoceantop.github.io/Jesse/2018/06/05/git的基本命令/","excerpt":"Git是一个开源的分布式版本控制系统，可以有效、高速的处理从很小到非常大的项目版本管理。 Git 是 Linus Torvalds 为了帮助管理 Linux 内核开发而开发的一个开放源码的版本控制软件。开发者：Linus Torvalds（同时也是linux的开发者，他是神↓） Linus Torvalds","text":"Git是一个开源的分布式版本控制系统，可以有效、高速的处理从很小到非常大的项目版本管理。 Git 是 Linus Torvalds 为了帮助管理 Linux 内核开发而开发的一个开放源码的版本控制软件。开发者：Linus Torvalds（同时也是linux的开发者，他是神↓） Linus Torvalds 身份象征确定身份象征(提交任何修改使用)12git config --global user.name \"\"git config --global user.email \"\" 查看身份象征12git config user.namegit config user.email 操作项目确定管理项目cd进入到该项目目录 初始化git init 查看管理库状态 查看普通状态git status查看修改状态git status -s 添加可提交修改（commited）文件（stage状态的文件） 提交单个文件git add 1.py提交所有文件git add .撤销提交的文件git reset 1.py 提交文件 直接提交git commit -m &quot;提交信息&quot;直接提交并添加git commit -am &quot;提交信息&quot;（已经管理库有的文件，新文件无法识别到）提交文件至上次提交的分支git commit --amend（上次分支） --no-edit（不修改-m信息） 打印git日志 直接打印git log简洁打印git log --oneline简洁图形打印git log --oneline --graph 查看修改信息 查看已修改未添加的修改信息git diff查看已添加的修改信息git diff --cached查看已添加再修改文件的修改信息git diff HEAD 修改当前的头分支git reset --hard (分支id号或HEAD指针（HEAD@{0}）) 重置单个文件的内容信息git checkout 分支id号 -- 1.py 暂存任务 暂存当前任务git stash取出暂存任务git stash pop 分支操作 创建分支git branch dev 或者 git checkout -b dev(创建并切换到该分支)查看分支git branch切换分支git checkout dev删除分支git branch -d dev合并分支git merge --no-ff -m &quot;合并信息&quot; dev合并分支git rebase dev git工作流程图 git工作流程图 github建立远程连接git remote add origin xxxxxxxxxx.git 从远程取分支的更新并与本地指定分支结合git pull origin remotebranch:localbranch 远程分支的更新与当前分支结合git pull origin remotebranch 将本地分支上传到远程分支git push -u origin master 将本地分支强制上传到远程分支git push -fu origin master（覆盖掉远程分支的所有文件）","categories":[{"name":"git","slug":"git","permalink":"https://rainoceantop.github.io/Jesse/categories/git/"},{"name":"基本命令","slug":"git/基本命令","permalink":"https://rainoceantop.github.io/Jesse/categories/git/基本命令/"}],"tags":[{"name":"git","slug":"git","permalink":"https://rainoceantop.github.io/Jesse/tags/git/"},{"name":"git基本命令","slug":"git基本命令","permalink":"https://rainoceantop.github.io/Jesse/tags/git基本命令/"},{"name":"git基础","slug":"git基础","permalink":"https://rainoceantop.github.io/Jesse/tags/git基础/"}]}]}