<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Jesse</title>
  
  <subtitle>个人博客</subtitle>
  <link href="/Jesse/atom.xml" rel="self"/>
  
  <link href="https://rainoceantop.github.io/Jesse/"/>
  <updated>2018-07-10T16:45:32.494Z</updated>
  <id>https://rainoceantop.github.io/Jesse/</id>
  
  <author>
    <name>Jesse</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>mysql优化（配置参数优化）</title>
    <link href="https://rainoceantop.github.io/Jesse/2018/07/10/mysql%E4%BC%98%E5%8C%96/"/>
    <id>https://rainoceantop.github.io/Jesse/2018/07/10/mysql优化/</id>
    <published>2018-07-09T17:55:39.000Z</published>
    <updated>2018-07-10T16:45:32.494Z</updated>
    
    <content type="html"><![CDATA[<p>mysql优化主要分为三个方面<br>1.内核优化（主要由服务器运维人员完成）<br><strong>2.配置参数优化（my.cnf），通过进行压力测试来适当调整配置参数</strong><br>3.SQL语句优化</p><a id="more"></a><p><strong>前言：本文代码必须在mysql环境下实现</strong><br><strong>命令行运行mysql命令：<code>mysql -u 帐号 -p 密码</code></strong></p><h4 id="查看运行时间"><a href="#查看运行时间" class="headerlink" title="查看运行时间"></a>查看运行时间</h4><p>1.<code>select version()</code>：查看数据库版本，只有5.0.37以上版本才支持show profiles（查看语句具体运行时间）<br>2.<code>show variables like &quot;%pro%&quot;</code>：查看profiling是否开启（默认不开启）<br>3.<code>set profiling = 1</code>：开启profiling<br>4.<code>show profiles</code>：查看所有运行过的sql语句的执行时间<br>5.<code>show profile for query 1</code>：查看第一个sql语句执行过程的各个操作的耗时情况<br>6.<code>show profile cpu,block io,memory,swaps,context switches,source for query 1</code>：查看第一个sql语句执行的各种资源消耗情况<br>7.<code>set profiling = 0</code>：关闭profiling</p><h4 id="修改变量"><a href="#修改变量" class="headerlink" title="修改变量"></a>修改变量</h4><p><strong>大部分mysql变量都是可以用set加变量名修改的，具体有以下几种方式</strong><br>1.<code>set profiling = 1/0</code>：开启/关闭profiling，也可以使用2/3/4的命令<br>2.<code>set @@profiling = 1/0</code>：效果如1<br>3.<code>set @@session.profiling = 1/0</code>：效果如1<br>4.<code>set session profiling = 1/0</code>：效果如1<br><strong>set global profiling = 1/0：由于profiling是当前会话级别的，所以该语句无效</strong></p><h4 id="查询变量"><a href="#查询变量" class="headerlink" title="查询变量"></a>查询变量</h4><p><strong>查询变量可用<code>show variables like &#39;%somthing%&#39;</code>查询相关变量，如想查询指定变量可用<code>select @@var_name</code></strong><br>1.GLOBAL：全局变量，修改这个级别的变量影响所有会话<br>2.SESSION：当前会话变量，修改这个级别的变量影响当前会话<br>3.<code>SHOW [GLOBAL | SESSION] VARIABLES [LIKE &#39;pattern&#39; | WHERE expr]</code>：查看变量（全局会话，当前会话）的通用表达式<br>4.<code>select @@global.var_name/@@session.var_name</code>：查看单个变量（完全显示变量名和值）</p><h4 id="自定义变量"><a href="#自定义变量" class="headerlink" title="自定义变量"></a>自定义变量</h4><p>1.创建变量并赋值：<code>set @name=&#39;hello world&#39;</code>;<br>2.变量赋值：<code>set @name:=author from posts limit 0,1;</code>（将查询到的author栏的第一个值赋值）<br>3.查看变量：<code>select @name</code>;</p><h4 id="缓存"><a href="#缓存" class="headerlink" title="缓存"></a>缓存</h4><h5 id="查看是否开启缓存"><a href="#查看是否开启缓存" class="headerlink" title="查看是否开启缓存"></a>查看是否开启缓存</h5><p><code>show variables like &#39;%query_cache%&#39;</code>：如果query_cache_type值是ON的话说明已经开启缓存<br><strong>查询得到的如下属性以及其代表意义</strong></p><ul><li><em>have_query_cache</em>：表示当前版本mysql是否支持query cache</li><li><em>query_cache_limit</em>：指定单个查询能够使用的缓冲区大小，缺省为1M</li><li><em>query_cache_min_res_unit</em>：表示query cache每个结果集存放的最小内存大小，默认4k</li><li><em>query_cache_size</em>：表示系统中用于query cache的内存大小<br>在Mysql中，可以设置Query Cache所使用的总内存,MySQL会把默认可以进行缓存的SQL语句的结果集进行缓存,一旦内存塞满后，就会剔除老的Query Cache对象。同时为了保证Query Cache中的内容与是实际数据绝对一致,当表中的数据有任何变化，包括新增、修改、删除等，都会使所有引用到该表的SQL的Query Cache 失效.</li><li><p><em>query_cache_type</em>：系统是否打开了query cache功能</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">query_cache_type=0*（OFF）：关闭</span><br><span class="line">query_cache_type=1*（ON）：缓存所有结果，除非select语句使用SQL_NO_CACHE禁用查询缓存</span><br><span class="line">query_cache_type=2*(demand)：只缓存select语句中通过SQL_CACHE指定需要缓存的查询，例如 `select SQL_CACHE count(*) from table`</span><br></pre></td></tr></table></figure></li><li><p><em>query_cache_wlock_invalidate</em>：针对myisam存储引擎，设置当有write lock在某个table上面的时候，读请求是要等待write lock释放资源之后再查询还是允许直接从query cache中读取结果，默认是OFF，可以直接从query cache中取得结果。</p></li></ul><h5 id="开启缓存"><a href="#开启缓存" class="headerlink" title="开启缓存"></a>开启缓存</h5><p>打开配置文件（my.cnf），修改并保存以下内容<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[mysqld]中添加</span><br><span class="line">query_cache_size = 20M</span><br><span class="line">query_cache_type = ON</span><br></pre></td></tr></table></figure></p><h5 id="缓存状态"><a href="#缓存状态" class="headerlink" title="缓存状态"></a>缓存状态</h5><p><code>show status like &#39;qcache%&#39;</code>：可查看缓存状态<br><strong>查询得到的如下属性以及其代表意义</strong></p><ul><li><em>Qcache_free_blocks</em>：缓存中相邻内存块的个数。数目大说明可能有碎片。FLUSH QUERY CACHE会对缓存中的碎片进行整理，从而得到一个空闲块</li><li><em>Qcache_free_memory</em>：缓存中的空闲内存。  </li><li><em>Qcache_hits</em>：每次查询在缓存中命中时就增大  </li><li><em>Qcache_inserts</em>：表示未命中cache后将结果集再写入到cache中的次数</li><li><em>Qcache_lowmem_prunes</em>：缓存出现内存不足并且必须要进行清理以便为更多查询提供空间的次数。这个数字最好长时间来看;如果这个 数字在不断增长，就表示可能碎片非常严重，或者内存很少。(上面的 free_blocks和free_memory可以告诉您属于哪种情况)  </li><li><em>Qcache_not_cached</em>：不适合进行缓存的查询的数量，通常是由于这些查询不是SELECT语句或者用了now()之类的函数。  </li><li><em>Qcache_queries_in_cache</em>：当前缓存的查询(和响应)的数量  </li><li><em>Qcache_total_blocks</em>：缓存中块的数量</li></ul><h5 id="评估缓存命中率公式"><a href="#评估缓存命中率公式" class="headerlink" title="评估缓存命中率公式"></a>评估缓存命中率公式</h5><p>Qcache_hits/Com_select （缓存命中次数/总查询次数）<br><strong>当读写操作差不多的时候，建议关闭该功能，但是如果是大量查询,即读多写少的环境中，建议启用缓存</strong><br>注意，第一次查询时生成缓存，接下去的查询才会命中缓存<br>查看Com_select（总查询次数）的总数<br><code>MariaDB [sunny]&gt; show global status like &#39;Com%select%&#39;;</code></p><h5 id="缓存数据失效时机"><a href="#缓存数据失效时机" class="headerlink" title="缓存数据失效时机"></a>缓存数据失效时机</h5><ul><li>在表的结构或数据发生改变时，查询缓存中的数据不再有效</li><li>有这些INSERT、UPDATE、 DELETE、TRUNCATE、ALTER TABLE、DROP TABLE或DROP DATABASE会导致缓存数据失效<br><strong>所以查询缓存适合有大量相同查询的应用，不适合有大量数据更新的应用</strong></li></ul><h5 id="清理查询缓存"><a href="#清理查询缓存" class="headerlink" title="清理查询缓存"></a>清理查询缓存</h5><ul><li><code>FLUSH QUERY CACHE;</code> // 清理查询缓存内存碎片</li><li><code>RESET QUERY CACHE;</code> // 从查询缓存中移出所有查询</li><li><code>FLUSH TABLES;</code> //关闭所有打开的表，同时该操作将会清空查询缓存中的内容</li></ul><h4 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h4><p>1.mysql配置文件：linux一般放在/etc/my.cnf（xampp集成环境在lampp下的etc中）<br>2.查询mysql变量的单位：B（也就是如果你设置query_cache_size=20M，那么查询该变量时会显示20<em>1024</em>1024的值）<br>3.如果使用的数据库引擎是innodb，那么innodb_buffer_pool_size是一个对于优化很重要的变量，可以缓存表的索引，数据，插入数据时的缓冲，值越大，可缓存的数据越多，就不需要频繁地进行磁盘I/O读写操作。如果是一个专用DB服务器，那么他可以占到内存的70%-80%。<strong>但是也不是越大越好，分配过大，会使Swap占用过多，致使Mysql的查询特慢</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;mysql优化主要分为三个方面&lt;br&gt;1.内核优化（主要由服务器运维人员完成）&lt;br&gt;&lt;strong&gt;2.配置参数优化（my.cnf），通过进行压力测试来适当调整配置参数&lt;/strong&gt;&lt;br&gt;3.SQL语句优化&lt;/p&gt;
    
    </summary>
    
      <category term="mysql" scheme="https://rainoceantop.github.io/Jesse/categories/mysql/"/>
    
      <category term="优化配置" scheme="https://rainoceantop.github.io/Jesse/categories/mysql/%E4%BC%98%E5%8C%96%E9%85%8D%E7%BD%AE/"/>
    
    
      <category term="mysql" scheme="https://rainoceantop.github.io/Jesse/tags/mysql/"/>
    
      <category term="mysql优化" scheme="https://rainoceantop.github.io/Jesse/tags/mysql%E4%BC%98%E5%8C%96/"/>
    
      <category term="mysql优化配置" scheme="https://rainoceantop.github.io/Jesse/tags/mysql%E4%BC%98%E5%8C%96%E9%85%8D%E7%BD%AE/"/>
    
  </entry>
  
  <entry>
    <title>linux下php集成环境配置</title>
    <link href="https://rainoceantop.github.io/Jesse/2018/06/18/linux%E4%B8%8Bphp%E9%9B%86%E6%88%90%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
    <id>https://rainoceantop.github.io/Jesse/2018/06/18/linux下php集成环境配置/</id>
    <published>2018-06-17T23:02:54.000Z</published>
    <updated>2018-06-18T15:38:49.065Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要讲解linux下配置php集成环境。主要有以下内容：</p><ul><li>xampp的下载以及安装</li><li>apache以及mysql的启动与停止</li><li>修改配置文件</li></ul><a id="more"></a><h3 id="xampp的下载与安装"><a href="#xampp的下载与安装" class="headerlink" title="xampp的下载与安装"></a>xampp的下载与安装</h3><p>xampp可在<a href="https://www.apachefriends.org/zh_cn/download.html" target="_blank" rel="noopener">官方网站的下载页</a>下载，下载完打开下载目录，可以看到有一个名类似为<code>xampp-linux-x64-xxxxx-x-installer.run</code>的安装文件。<br>打开终端命令行，键入以下代码进行安装<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//首先进入到xampp安装文件的目录，我的是下载目录</span><br><span class="line"><span class="built_in">cd</span> 下载</span><br><span class="line">//然后运行安装文件启动安装程序，一般情况下一直点击next即可，xampp一般情况下会被安装在/opt目录下的lampp</span><br><span class="line">sudo ./xampp-linux-x64-xxxxx-x-installer.run</span><br></pre></td></tr></table></figure></p><h3 id="apache以及mysql"><a href="#apache以及mysql" class="headerlink" title="apache以及mysql"></a>apache以及mysql</h3><h4 id="命令行启动停止操作（推荐）"><a href="#命令行启动停止操作（推荐）" class="headerlink" title="命令行启动停止操作（推荐）"></a>命令行启动停止操作（推荐）</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo /opt/lampp/lampp start    //启动服务</span><br><span class="line">sudo /opt/lampp/lampp restart  //重启服务</span><br><span class="line">sudo /opt/lampp/lampp stop     //停止服务</span><br></pre></td></tr></table></figure><h4 id="图形管理界面操作"><a href="#图形管理界面操作" class="headerlink" title="图形管理界面操作"></a>图形管理界面操作</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo /opt/lampp/manager-linux-x64.run //打开图形管理界面</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/Jesse/2018/06/18/linux下php集成环境配置/xampp_panel.png" alt="图形管理界面" title="">                </div>                <div class="image-caption">图形管理界面</div>            </figure><p><strong>启动服务后建议打开浏览器输入localhost网址看下有没有运行成功</strong></p><h3 id="修改apache默认执行路径"><a href="#修改apache默认执行路径" class="headerlink" title="修改apache默认执行路径"></a>修改apache默认执行路径</h3><p>apache的默认执行路径是项目文件夹的htdocs目录，因为xampp是安装在linux根目录的opt文件夹下面，由于权限问题是不能创建文件以及文件夹的。为了方便操作，我们可以把他的执行路径更改到可方便操作的地方，比如用户下面(<code>/home/user/</code>)。<br>xampp的配置文件放在该目录的etc文件夹中，由于权限问题，如果要更改执行路径可以用命令行通过nano操作<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">//通过nano打开apache配置文件，注意要用sudo管理员身份打开</span><br><span class="line">sudo nano /opt/lampp/etc/httpd.conf</span><br><span class="line">//找到下面两行，将路径改为你的项目路径</span><br><span class="line">DocumentRoot <span class="string">"/home/user/yourapp"</span></span><br><span class="line">&lt;Directory <span class="string">"/home/user/yourapp"</span>&gt;</span><br><span class="line">//打开apache下的config文件</span><br><span class="line">sudo nano /opt/lampp/apache2/conf/httpd.conf</span><br><span class="line">//继续修改路径</span><br><span class="line">&lt;Directory <span class="string">"/home/user/yourapp"</span>&gt;</span><br></pre></td></tr></table></figure></p><p>修改完后按<code>ctrl o</code>保存，<code>ctrl x</code>退出编辑，然后输入<code>sudo /opt/lampp/lampp restart</code>重启apache服务器</p><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><h4 id="mysql操作"><a href="#mysql操作" class="headerlink" title="mysql操作"></a>mysql操作</h4><p>因为xampp自带phpmyadmin，我们可以很方便的查看以及操作数据库。<br>在打开了apache以及mysql服务后，在浏览器输入<code>localhost/phpmyadmin</code>即可进入数据库图形操作界面（自动登录）。<br>值得注意的是，phpmyadmin默认的帐号是root，密码为空，也就是””，与mysql相同（可以打开<code>/opt/lampp/phpmyadmin/config.inc.php</code>查看）。如果要连接mysql数据库，使用帐号<code>root</code>密码<code>&quot;&quot;</code>连接即可。</p><h4 id="php解释器路径"><a href="#php解释器路径" class="headerlink" title="php解释器路径"></a>php解释器路径</h4><p>xampp的php解释器默认情况下放在<code>/opt/lampp/bin/php</code>，可以在命令行键入<code>whereis php</code>查看</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要讲解linux下配置php集成环境。主要有以下内容：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;xampp的下载以及安装&lt;/li&gt;
&lt;li&gt;apache以及mysql的启动与停止&lt;/li&gt;
&lt;li&gt;修改配置文件&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="linux" scheme="https://rainoceantop.github.io/Jesse/categories/linux/"/>
    
      <category term="php" scheme="https://rainoceantop.github.io/Jesse/categories/linux/php/"/>
    
      <category term="环境配置" scheme="https://rainoceantop.github.io/Jesse/categories/linux/php/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
    
    
      <category term="linux" scheme="https://rainoceantop.github.io/Jesse/tags/linux/"/>
    
      <category term="php" scheme="https://rainoceantop.github.io/Jesse/tags/php/"/>
    
      <category term="php集成环境配置" scheme="https://rainoceantop.github.io/Jesse/tags/php%E9%9B%86%E6%88%90%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
    
  </entry>
  
  <entry>
    <title>manjaro基本设置</title>
    <link href="https://rainoceantop.github.io/Jesse/2018/06/05/manjaro%E5%9F%BA%E6%9C%AC%E8%AE%BE%E7%BD%AE/"/>
    <id>https://rainoceantop.github.io/Jesse/2018/06/05/manjaro基本设置/</id>
    <published>2018-06-04T23:11:33.000Z</published>
    <updated>2018-06-05T00:38:23.738Z</updated>
    
    <content type="html"><![CDATA[<p>Manjaro是一款基于Arch Linux、对用户友好、全球排名第1的Linux发行版。详情参见<a href="https://distrowatch.com/dwres.php?resource=popularity" target="_blank" rel="noopener">distrowatch</a><br>这篇文章主要是将manjaro刚安装完需要设置的东西罗列出来，一切都是为了在使用中尽量减少碰见的问题<br>附上manjaro的相关链接：<br><a href="https://www.manjaro.cn/" target="_blank" rel="noopener">manjaro中文网</a><br><a href="http://manjaro.github.io/" target="_blank" rel="noopener">manjaro官方网站</a><br><a href="https://zhuanlan.zhihu.com/p/35663653" target="_blank" rel="noopener">manjaro安装参考</a></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=3223425153,1628165458&fm=27&gp=0.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><a id="more"></a><h3 id="配置国内源"><a href="#配置国内源" class="headerlink" title="配置国内源"></a>配置国内源</h3><p>打开manjaro命令行（菜单里的终端模拟器），键入如下两行代码<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">//由于各方面原因，有些命令可能不起作用，前三行代码逐个测试，可以之后跳到更新系统</span><br><span class="line">sudo pacman-mirrors -gb testing -c China //选择中国源，可选一个或多个或全选</span><br><span class="line">sudo pacman-mirrors -b testing -c China</span><br><span class="line">sudo pacman-mirrors -i -c China -m rank</span><br><span class="line">sudo pacman -Syyu  //更新系统</span><br></pre></td></tr></table></figure></p><h3 id="升级软件"><a href="#升级软件" class="headerlink" title="升级软件"></a>升级软件</h3><p>由于配置了中国源，现在就不受网速限制了。看到右下角的软件包管理器提醒你更新软件了吗？打开它并更新软件至最新版本</p><h3 id="配置输入法"><a href="#配置输入法" class="headerlink" title="配置输入法"></a>配置输入法</h3><p>在软件管理包搜索并下载谷歌拼音，通过软件包管理器下载输入法会同时下载相关依赖，如fcitx。<br><strong>下载完重启才能开启输入法（至少目前我不知道还有其他方法）</strong><br>如果发现不能配置输入法，打开命令行键入以下命令后再重试<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S fcitx-im</span><br><span class="line">sudo pacman -S fcitx-configtool</span><br></pre></td></tr></table></figure></p><p>在配置界面里可以配置输入法的切换激活快捷键，但还差最后一步配置才能正常使用输入法<br>打开命令行，键入以下代码<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sudo nano ~/.xprofile </span><br><span class="line">//进入编辑页面后，复制以下代码粘贴上去，然后根据提示保存后离开重试</span><br><span class="line"><span class="comment">#fcitx</span></span><br><span class="line"><span class="built_in">export</span> GTK_IM_MODULE=fcitx </span><br><span class="line"><span class="built_in">export</span> QT_IM_MODULE=fcitx </span><br><span class="line"><span class="built_in">export</span> XMODIFIERS=<span class="string">"@im=fcitx"</span></span><br></pre></td></tr></table></figure></p><h3 id="时间调整"><a href="#时间调整" class="headerlink" title="时间调整"></a>时间调整</h3><p>如果你使用的是双系统（manjaro和windows并存），那么你可能会遇到时间比你所在时区的正常时间快了8个小时。这是因为linux和windows看待系统硬件的方式是不一样的<br>Windows把系统硬件时间当作本地时间(local time),即操作系统中显示的时间跟BIOS中显示的时间是一样的。 Linux/Unix/Mac把硬件时间当作UTC，操作系统中显示的时间是硬件时间经过换算得来的，比如说北京时间是GMT+8，则系统中显示时间是硬件时间+8。<br>解决方法其实也很简单，只要进入windows系统。通过右击时间显示区，打开日期和时间，修改时区为<code>(UTC)协调世界时</code>即可</p><h3 id="win10系统下关机后自动重启"><a href="#win10系统下关机后自动重启" class="headerlink" title="win10系统下关机后自动重启"></a>win10系统下关机后自动重启</h3><p>进入电源选项（控制面板或左下角搜索栏搜索电源）→选择电源按钮的功能→更改当前不可用的设置→取消勾选“启用快速启动”功能 即可</p><h3 id="添加archlinuxCN源"><a href="#添加archlinuxCN源" class="headerlink" title="添加archlinuxCN源"></a>添加archlinuxCN源</h3><p>打开命令行，键入以下代码<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">sudo nano /etc/pacman.conf</span><br><span class="line">//进入编辑页面后，在文件底部加入如下几行，保存离开</span><br><span class="line">[archlinuxcn]</span><br><span class="line">SigLevel = Optional TrustedOnly</span><br><span class="line">Server = https://mirrors.ustc.edu.cn/archlinuxcn/<span class="variable">$arch</span></span><br><span class="line">//配置完后键入以下命令</span><br><span class="line">sudo pacman-mirrors -g //更新并选择最快的源列表</span><br><span class="line">pacman -S archlinux-keying //更新archlinux签名</span><br><span class="line">sudo pacman -S yaourt //用于软件安装arch源的软件</span><br><span class="line">sudo pacman -Syyu //同步并更新系统</span><br></pre></td></tr></table></figure></p><h3 id="安装常用软件"><a href="#安装常用软件" class="headerlink" title="安装常用软件"></a>安装常用软件</h3><p>如果已经安装了archlinuxcn源，可以打开软件包管理器-&gt;首选项-&gt;AUR-&gt;启用AUR支持，然后就可以直接在管理器里下载需要的软件了<br>或者也可以使用命令行安装，以下列出两个例子</p><h4 id="网易云音乐"><a href="#网易云音乐" class="headerlink" title="网易云音乐"></a>网易云音乐</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yaourt -S netease-cloud-music</span><br></pre></td></tr></table></figure><h4 id="微信"><a href="#微信" class="headerlink" title="微信"></a>微信</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yaourt -S electronic-wechat</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Manjaro是一款基于Arch Linux、对用户友好、全球排名第1的Linux发行版。详情参见&lt;a href=&quot;https://distrowatch.com/dwres.php?resource=popularity&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;distrowatch&lt;/a&gt;&lt;br&gt;这篇文章主要是将manjaro刚安装完需要设置的东西罗列出来，一切都是为了在使用中尽量减少碰见的问题&lt;br&gt;附上manjaro的相关链接：&lt;br&gt;&lt;a href=&quot;https://www.manjaro.cn/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;manjaro中文网&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://manjaro.github.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;manjaro官方网站&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/35663653&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;manjaro安装参考&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;image-bubble&quot;&gt;
                &lt;div class=&quot;img-lightbox&quot;&gt;
                    &lt;div class=&quot;overlay&quot;&gt;&lt;/div&gt;
                    &lt;img src=&quot;https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=3223425153,1628165458&amp;fm=27&amp;gp=0.jpg&quot; alt=&quot;&quot; title=&quot;&quot;&gt;
                &lt;/div&gt;
                &lt;div class=&quot;image-caption&quot;&gt;&lt;/div&gt;
            &lt;/figure&gt;
    
    </summary>
    
      <category term="linux" scheme="https://rainoceantop.github.io/Jesse/categories/linux/"/>
    
      <category term="manjaro" scheme="https://rainoceantop.github.io/Jesse/categories/linux/manjaro/"/>
    
      <category term="基本设置" scheme="https://rainoceantop.github.io/Jesse/categories/linux/manjaro/%E5%9F%BA%E6%9C%AC%E8%AE%BE%E7%BD%AE/"/>
    
    
      <category term="linux" scheme="https://rainoceantop.github.io/Jesse/tags/linux/"/>
    
      <category term="archlinux" scheme="https://rainoceantop.github.io/Jesse/tags/archlinux/"/>
    
      <category term="manjaro" scheme="https://rainoceantop.github.io/Jesse/tags/manjaro/"/>
    
      <category term="manjaro基本设置" scheme="https://rainoceantop.github.io/Jesse/tags/manjaro%E5%9F%BA%E6%9C%AC%E8%AE%BE%E7%BD%AE/"/>
    
  </entry>
  
  <entry>
    <title>linux基础</title>
    <link href="https://rainoceantop.github.io/Jesse/2018/06/05/linux%E5%9F%BA%E7%A1%80/"/>
    <id>https://rainoceantop.github.io/Jesse/2018/06/05/linux基础/</id>
    <published>2018-06-04T21:59:02.000Z</published>
    <updated>2018-06-17T22:04:27.752Z</updated>
    
    <content type="html"><![CDATA[<p>Linux是一套免费使用和自由传播的类Unix操作系统，是一个基于POSIX和UNIX的多用户、多任务、支持多线程和多CPU的操作系统。它能运行主要的UNIX工具软件、应用程序和网络协议。它支持32位和64位硬件。Linux继承了Unix以网络为核心的设计思想，是一个性能稳定的多用户网络操作系统。<br>严格来讲，Linux这个词本身只表示Linux内核，但实际上人们已经习惯了用Linux来形容整个基于Linux内核，并且使用GNU 工程各种工具和数据库的操作系统。<br>开发者：Linus Torvalds（同时也是git的开发者）<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1923395011,885347984&fm=27&gp=0.jpg" alt="Linux吉祥物 Tux" title="">                </div>                <div class="image-caption">Linux吉祥物 Tux</div>            </figure></p><a id="more"></a><h3 id="目录操作"><a href="#目录操作" class="headerlink" title="目录操作"></a>目录操作</h3><pre><code>进入目录：cd mulu/mulu2返回目录：cd ../..返回最上层目录：cd -返回home : cd ~绝对路径进入目录：cd /home/jesse/Documents/folder</code></pre><h3 id="文件操作"><a href="#文件操作" class="headerlink" title="文件操作"></a>文件操作</h3><h4 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h4><pre><code>创建文件：touch file1.txt file2 file3创建文件夹：mkdir folder3</code></pre><h4 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h4><pre><code>删除文件夹：rmdir folder3(删除空文件夹)删除文件/文件夹：    rm file1    rm -r folder1/(递归逐个删除)    rm -i file1 file2 file3 file4(逐个提示是否删除)    rm -I file1 file2 file3 file4(大于三个文件时提示是否删除)    rm *(清空该目录下所有文件)    rm /(清空系统所有文件)</code></pre><h4 id="复制-amp-剪切"><a href="#复制-amp-剪切" class="headerlink" title="复制&amp;剪切"></a>复制&amp;剪切</h4><pre><code>复制文件：    cp file1 filecopy(如果存在会覆盖)    cp -i file1 filecopy(如果存在会提示)    cp file1 folder/(复制到文件夹folder中，/识别文件夹)    cp -R folder/ folder2/(-R代表递归，逐个将folder的文件复制到folder2中)    cp file* folder2/(将所有file开头的文件复制到folder2目录下)    cp *file folder2/(将所有file结尾的文件复制到folder2目录下)    cp file1 file2 file3 folder2/(将前面所有的东西复制到最后所指的目录)剪切：    mv file1 folder/  (移动到当前文件夹的folader文件夹下)    mv file1 ./folder (同上，移动到当前文件夹的folader文件夹下)    mv file1 ./folder file2 (移动到当前文件夹的folader文件夹下并重命名为file2)    mv file1 /folder (!此操作会将文件移动到根目录)</code></pre><h4 id="查看"><a href="#查看" class="headerlink" title="查看"></a>查看</h4><pre><code>查看当前目录下的文件列表：ls查看当前目录下的文件列表的详细信息：ls -l 或者 ls -lh(适合人类看的)查看当前目录下的所有文件列表：ls -a查看ls的所有功能：ls --helpnano编辑文件(功能命令^代表ctrl键)：nano t.py(不存在文件的话会自动创建文件)cat编辑文件：    cat t.py(显示文件内容)    cat t.py &gt; t1.py(将t.py的内容复制到t1.py中)    cat t.py t1.py &gt; t2.py(将t.py t1.py的内容复制到t2.py中)    cat t3.py &gt;&gt; t2.py(将t3.py的内容加到t2.ty的后面)</code></pre><h4 id="执行"><a href="#执行" class="headerlink" title="执行"></a>执行</h4><pre><code>运行python3文件：python3 t.py（被执行文件头部需要有解释器声明 #!/usr/bin/python3）</code></pre><h3 id="权限操作"><a href="#权限操作" class="headerlink" title="权限操作"></a>权限操作</h3><h4 id="权限解读"><a href="#权限解读" class="headerlink" title="权限解读"></a>权限解读</h4><pre><code>第1代表类型，第2-4代表user，第5-7代表group，第8-10代表其他的权限，例如：drwxr-xr-x：d代表文件夹类型，r代表可读，w代表可写，x代表可执行(执行命令：./t1.py)-rw-r--r--：第一个-代表文件类型</code></pre><h4 id="修改权限"><a href="#修改权限" class="headerlink" title="修改权限"></a>修改权限</h4><pre><code>chmod u+r t1.py(为user用户t1.py增加可读权限)chmod u+rwx t1.py(为user用户t1.py增加可读可写可执行权限)chmod u-r t1.py(为user用户t1.py减去可读权限)chmod g+r t1.py(为group用户t1.py增加可读权限)chmod o+r t1.py(为others用户t1.py增加可读权限)chmod a+r t1.py(为全部用户t1.py增加可读权限)chmod ug+r t1.py(为user,group用户t1.py增加可读权限)</code></pre><h3 id="SSH连接"><a href="#SSH连接" class="headerlink" title="SSH连接"></a>SSH连接</h3><pre><code>下载linux SSH终端：sudo apt-get install openssh-server获取ip地址：ifconfig(如果提示没安装一些东西：sudo apt install net-tools)用mac控制linux：ssh jesse@192.168.0.108用windows控制：下载PuTTY手机控制：下载ssh应用控制后图形界面显示：  使用外网 Teamviewer  使用局域网 VNC(sudo apt-get install x11vnc)mac将文件推送到linux运行：ssh jesse@192.168.0.108 python3 &lt; t1.py(将t1.py推送到linux上运行)将文件复制到linux上：scp {a,b}.py jesse@192.168.0.108:~/Desktop/从linux云端保存到本地：scp jesse@192.168.0.108:~/Desktop/b.py c.py控制云端弹出窗口：ssh jesse@192.168.0.108 &quot;export DISPLAY:0; firefox&quot;</code></pre><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><pre><code>清空命令行：clear下载软件：sudo apt-get install xxxxx （arch系列的linux不适用）</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Linux是一套免费使用和自由传播的类Unix操作系统，是一个基于POSIX和UNIX的多用户、多任务、支持多线程和多CPU的操作系统。它能运行主要的UNIX工具软件、应用程序和网络协议。它支持32位和64位硬件。Linux继承了Unix以网络为核心的设计思想，是一个性能稳定的多用户网络操作系统。&lt;br&gt;严格来讲，Linux这个词本身只表示Linux内核，但实际上人们已经习惯了用Linux来形容整个基于Linux内核，并且使用GNU 工程各种工具和数据库的操作系统。&lt;br&gt;开发者：Linus Torvalds（同时也是git的开发者）&lt;br&gt;&lt;figure class=&quot;image-bubble&quot;&gt;
                &lt;div class=&quot;img-lightbox&quot;&gt;
                    &lt;div class=&quot;overlay&quot;&gt;&lt;/div&gt;
                    &lt;img src=&quot;https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1923395011,885347984&amp;fm=27&amp;gp=0.jpg&quot; alt=&quot;Linux吉祥物 Tux&quot; title=&quot;&quot;&gt;
                &lt;/div&gt;
                &lt;div class=&quot;image-caption&quot;&gt;Linux吉祥物 Tux&lt;/div&gt;
            &lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="linux" scheme="https://rainoceantop.github.io/Jesse/categories/linux/"/>
    
      <category term="基础" scheme="https://rainoceantop.github.io/Jesse/categories/linux/%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="linux" scheme="https://rainoceantop.github.io/Jesse/tags/linux/"/>
    
      <category term="linux基础" scheme="https://rainoceantop.github.io/Jesse/tags/linux%E5%9F%BA%E7%A1%80/"/>
    
      <category term="linux基本指令" scheme="https://rainoceantop.github.io/Jesse/tags/linux%E5%9F%BA%E6%9C%AC%E6%8C%87%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>git的基本命令</title>
    <link href="https://rainoceantop.github.io/Jesse/2018/06/05/git%E7%9A%84%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4/"/>
    <id>https://rainoceantop.github.io/Jesse/2018/06/05/git的基本命令/</id>
    <published>2018-06-04T21:02:42.000Z</published>
    <updated>2018-06-04T22:42:42.448Z</updated>
    
    <content type="html"><![CDATA[<p>Git是一个开源的分布式版本控制系统，可以有效、高速的处理从很小到非常大的项目版本管理。 Git 是 Linus Torvalds 为了帮助管理 Linux 内核开发而开发的一个开放源码的版本控制软件。<br>开发者：Linus Torvalds（同时也是linux的开发者，<strong>他是神↓</strong>）</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1528156573582&di=3e846e62c187ef6710eb2e3e0545eb62&imgtype=jpg&src=http%3A%2F%2Fimg3.imgtn.bdimg.com%2Fit%2Fu%3D2475420643%2C1638975679%26fm%3D214%26gp%3D0.jpg" alt="Linus Torvalds" title="">                </div>                <div class="image-caption">Linus Torvalds</div>            </figure><a id="more"></a><h3 id="身份象征"><a href="#身份象征" class="headerlink" title="身份象征"></a>身份象征</h3><h4 id="确定身份象征-提交任何修改使用"><a href="#确定身份象征-提交任何修改使用" class="headerlink" title="确定身份象征(提交任何修改使用)"></a>确定身份象征(提交任何修改使用)</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">""</span></span><br><span class="line">git config --global user.email <span class="string">""</span></span><br></pre></td></tr></table></figure><h4 id="查看身份象征"><a href="#查看身份象征" class="headerlink" title="查看身份象征"></a>查看身份象征</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config user.name</span><br><span class="line">git config user.email</span><br></pre></td></tr></table></figure><h3 id="操作项目"><a href="#操作项目" class="headerlink" title="操作项目"></a>操作项目</h3><h4 id="确定管理项目"><a href="#确定管理项目" class="headerlink" title="确定管理项目"></a>确定管理项目</h4><p><code>cd进入到该项目目录</code></p><h4 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h4><p><code>git init</code></p><h4 id="查看管理库状态"><a href="#查看管理库状态" class="headerlink" title="查看管理库状态"></a>查看管理库状态</h4><blockquote><p>查看普通状态<br><code>git status</code><br>查看修改状态<br><code>git status -s</code></p></blockquote><h4 id="添加可提交修改（commited）文件（stage状态的文件）"><a href="#添加可提交修改（commited）文件（stage状态的文件）" class="headerlink" title="添加可提交修改（commited）文件（stage状态的文件）"></a>添加可提交修改（commited）文件（stage状态的文件）</h4><blockquote><p>提交单个文件<br><code>git add 1.py</code><br>提交所有文件<br><code>git add .</code><br>撤销提交的文件<br><code>git reset 1.py</code></p></blockquote><h4 id="提交文件"><a href="#提交文件" class="headerlink" title="提交文件"></a>提交文件</h4><blockquote><p>直接提交<br><code>git commit -m &quot;提交信息&quot;</code><br>直接提交并添加<br><code>git commit -am &quot;提交信息&quot;（已经管理库有的文件，新文件无法识别到）</code><br>提交文件至上次提交的分支<br><code>git commit --amend（上次分支） --no-edit（不修改-m信息）</code></p></blockquote><h4 id="打印git日志"><a href="#打印git日志" class="headerlink" title="打印git日志"></a>打印git日志</h4><blockquote><p>直接打印<br><code>git log</code><br>简洁打印<br><code>git log --oneline</code><br>简洁图形打印<br><code>git log --oneline --graph</code></p></blockquote><h4 id="查看修改信息"><a href="#查看修改信息" class="headerlink" title="查看修改信息"></a>查看修改信息</h4><blockquote><p>查看已修改未添加的修改信息<br><code>git diff</code><br>查看已添加的修改信息<br><code>git diff --cached</code><br>查看已添加再修改文件的修改信息<br><code>git diff HEAD</code></p></blockquote><h4 id="修改当前的头分支"><a href="#修改当前的头分支" class="headerlink" title="修改当前的头分支"></a>修改当前的头分支</h4><p><code>git reset --hard (分支id号或HEAD指针（HEAD@{0}）)</code></p><h4 id="重置单个文件的内容信息"><a href="#重置单个文件的内容信息" class="headerlink" title="重置单个文件的内容信息"></a>重置单个文件的内容信息</h4><p><code>git checkout 分支id号 -- 1.py</code></p><h4 id="暂存任务"><a href="#暂存任务" class="headerlink" title="暂存任务"></a>暂存任务</h4><blockquote><p>暂存当前任务<br><code>git stash</code><br>取出暂存任务<br><code>git stash pop</code></p></blockquote><h4 id="分支操作"><a href="#分支操作" class="headerlink" title="分支操作"></a>分支操作</h4><blockquote><p>创建分支<br><code>git branch dev 或者 git checkout -b dev(创建并切换到该分支)</code><br>查看分支<br><code>git branch</code><br>切换分支<br><code>git checkout dev</code><br>删除分支<br><code>git branch -d dev</code><br>合并分支<br><code>git merge --no-ff -m &quot;合并信息&quot; dev</code><br>合并分支<br><code>git rebase dev</code></p></blockquote><h4 id="git工作流程图"><a href="#git工作流程图" class="headerlink" title="git工作流程图"></a>git工作流程图</h4><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1526969275687&di=39008720c7a6be94f84e01fb027878ad&imgtype=jpg&src=http%3A%2F%2Fimg4.imgtn.bdimg.com%2Fit%2Fu%3D2476305079%2C1118351419%26fm%3D214%26gp%3D0.jpg" alt="git工作流程图" title="">                </div>                <div class="image-caption">git工作流程图</div>            </figure><h3 id="github"><a href="#github" class="headerlink" title="github"></a>github</h3><h4 id="建立远程连接"><a href="#建立远程连接" class="headerlink" title="建立远程连接"></a>建立远程连接</h4><p><code>git remote add origin xxxxxxxxxx.git</code></p><h4 id="从远程取分支的更新并与本地指定分支结合"><a href="#从远程取分支的更新并与本地指定分支结合" class="headerlink" title="从远程取分支的更新并与本地指定分支结合"></a>从远程取分支的更新并与本地指定分支结合</h4><p><code>git pull origin remotebranch:localbranch</code></p><h4 id="远程分支的更新与当前分支结合"><a href="#远程分支的更新与当前分支结合" class="headerlink" title="远程分支的更新与当前分支结合"></a>远程分支的更新与当前分支结合</h4><p><code>git pull origin remotebranch</code></p><h4 id="将本地分支上传到远程分支"><a href="#将本地分支上传到远程分支" class="headerlink" title="将本地分支上传到远程分支"></a>将本地分支上传到远程分支</h4><p><code>git push -u origin master</code></p><h4 id="将本地分支强制上传到远程分支"><a href="#将本地分支强制上传到远程分支" class="headerlink" title="将本地分支强制上传到远程分支"></a>将本地分支强制上传到远程分支</h4><p><code>git push -fu origin master（覆盖掉远程分支的所有文件）</code></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Git是一个开源的分布式版本控制系统，可以有效、高速的处理从很小到非常大的项目版本管理。 Git 是 Linus Torvalds 为了帮助管理 Linux 内核开发而开发的一个开放源码的版本控制软件。&lt;br&gt;开发者：Linus Torvalds（同时也是linux的开发者，&lt;strong&gt;他是神↓&lt;/strong&gt;）&lt;/p&gt;
&lt;figure class=&quot;image-bubble&quot;&gt;
                &lt;div class=&quot;img-lightbox&quot;&gt;
                    &lt;div class=&quot;overlay&quot;&gt;&lt;/div&gt;
                    &lt;img src=&quot;https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1528156573582&amp;di=3e846e62c187ef6710eb2e3e0545eb62&amp;imgtype=jpg&amp;src=http%3A%2F%2Fimg3.imgtn.bdimg.com%2Fit%2Fu%3D2475420643%2C1638975679%26fm%3D214%26gp%3D0.jpg&quot; alt=&quot;Linus Torvalds&quot; title=&quot;&quot;&gt;
                &lt;/div&gt;
                &lt;div class=&quot;image-caption&quot;&gt;Linus Torvalds&lt;/div&gt;
            &lt;/figure&gt;
    
    </summary>
    
      <category term="git" scheme="https://rainoceantop.github.io/Jesse/categories/git/"/>
    
      <category term="基本命令" scheme="https://rainoceantop.github.io/Jesse/categories/git/%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4/"/>
    
    
      <category term="git" scheme="https://rainoceantop.github.io/Jesse/tags/git/"/>
    
      <category term="git基本命令" scheme="https://rainoceantop.github.io/Jesse/tags/git%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4/"/>
    
      <category term="git基础" scheme="https://rainoceantop.github.io/Jesse/tags/git%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
</feed>
